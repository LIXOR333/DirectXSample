name: Build DirectX Sample DLL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 15 # Prevent hanging

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Install Chocolatey (for MinGW only)
    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    # Install MinGW
    - name: Install MinGW
      run: |
        choco install mingw --version 8.1.0 -y
        if ($LASTEXITCODE -ne 0) { exit 1 }
        g++ --version

    # Download and set up 7z from the internet
    - name: Download and set up 7z
      run: |
        echo "Trying to download 7z from official site..."
        curl -L -o 7z.zip "https://www.7-zip.org/a/7z2301.zip" --retry 3 --retry-delay 5 -w "%{http_code}\n"
        $httpStatus = $LASTEXITCODE
        if ($httpStatus -ne 0 -or (Get-Item 7z.zip).Length -lt 1000000) {
          echo "Official site failed or file too small (size: $(Get-Item 7z.zip).Length bytes), trying SourceForge mirror..."
          curl -L -o 7z.zip "https://sourceforge.net/projects/sevenzip/files/7-Zip/23.01/7z2301.zip/download" --retry 3 --retry-delay 5 -w "%{http_code}\n"
          if ($LASTEXITCODE -ne 0 -or (Get-Item 7z.zip).Length -lt 1000000) {
            echo "All download attempts failed"
            exit 1
          }
        } else {
          echo "Download from official site succeeded (size: $(Get-Item 7z.zip).Length bytes)"
        }
        echo "Extracting 7z..."
        if (Test-Path 7z.zip) {
          Expand-Archive -Path 7z.zip -DestinationPath 7z -Force
          if ($LASTEXITCODE -ne 0) {
            echo "Failed to extract 7z.zip"
            exit 1
          }
          echo "Adding 7z to PATH..."
          echo "Path=$env:GITHUB_WORKSPACE\7z;$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append
          dir 7z\7z.exe
        } else {
          echo "7z.zip not found after download"
          exit 1
        }

    # Download DirectX SDK from Microsoft archive
    - name: Download DirectX SDK
      run: |
        echo "Downloading DirectX SDK from Microsoft archive..."
        curl -L -o dxsdk.exe "https://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe" --retry 3 --retry-delay 5
        if ($LASTEXITCODE -ne 0) {
          echo "Failed to download DirectX SDK from Microsoft archive"
          exit 1
        }
        dir dxsdk.exe

    # Extract DirectX SDK
    - name: Extract DirectX SDK
      run: |
        mkdir dxsdk
        7z x dxsdk.exe -odxsdk -y
        if ($LASTEXITCODE -ne 0) { exit 1 }
        dir dxsdk

    # Set up environment variables for DirectX SDK
    - name: Set up DirectX SDK environment
      run: |
        echo "DXSDK_DIR=$env:GITHUB_WORKSPACE\dxsdk" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "INCLUDE=$env:GITHUB_WORKSPACE\dxsdk\Include;$env:INCLUDE" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "LIB=$env:GITHUB_WORKSPACE\dxsdk\Lib\x64;$env:LIB" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "Path=$env:GITHUB_WORKSPACE\dxsdk\Lib\x64;$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append
        dir $env:GITHUB_WORKSPACE\dxsdk\Include
        dir $env:GITHUB_WORKSPACE\dxsdk\Lib\x64

    # Verify MinGW and DirectX SDK setup
    - name: Verify build environment
      run: |
        g++ --version
        dir "%DXSDK_DIR%\Include\d3d9.h"
        dir "%DXSDK_DIR%\Lib\x64\d3d9.lib"

    # Compile the DLL
    - name: Build DLL
      run: |
        g++ -shared -o DirectXSample.dll src/dllmain.cpp -I"$env:DXSDK_DIR\Include" -L"$env:DXSDK_DIR\Lib\x64" -ld3d9 -ld3dx9 -Wall -static-libgcc -static-libstdc++
        if ($LASTEXITCODE -ne 0) { exit 1 }
        dir DirectXSample.dll

    # Upload the DLL as an artifact
    - name: Upload DLL artifact
      uses: actions/upload-artifact@v4
      with:
        name: DirectXSample-DLL
        path: DirectXSample.dll
