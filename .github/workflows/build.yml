name: Build Rust Alkad 2588 Cheat DLL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          imgui-master
          minhook-master
          curl
          zlib-1.3.1
          json-develop
        key: ${{ runner.os }}-deps-${{ hashFiles('build.yml') }}

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Create log directory
      run: mkdir logs
      shell: cmd

    - name: Download ImGui
      run: |
        echo Downloading ImGui... >> logs/build.log
        curl -L -o imgui.zip https://github.com/ocornut/imgui/archive/refs/heads/master.zip && echo ImGui downloaded from primary (GitHub) >> logs/build.log || (
          echo Primary ImGui download failed, trying mirror 1... >> logs/build.log
          curl -L -o imgui.zip https://mirror.ghproxy.com/https://github.com/ocornut/imgui/archive/refs/heads/master.zip && echo ImGui downloaded from mirror 1 (ghproxy) >> logs/build.log || (
            echo Mirror 1 failed, trying mirror 2... >> logs/build.log
            curl -L -o imgui.zip https://codeload.github.com/ocornut/imgui/zip/refs/heads/master && echo ImGui downloaded from mirror 2 (codeload) >> logs/build.log || (
              echo Mirror 2 failed, trying mirror 3... >> logs/build.log
              curl -L -o imgui.zip https://web.archive.org/web/20250518000000/https://github.com/ocornut/imgui/archive/refs/heads/master.zip && echo ImGui downloaded from mirror 3 (archive.org) >> logs/build.log || (
                echo Mirror 3 failed, trying mirror 4... >> logs/build.log
                curl -L -o imgui.zip https://github.com/mirror-imgui/imgui/archive/refs/heads/master.zip && echo ImGui downloaded from mirror 4 (mirror-imgui) >> logs/build.log || (
                  echo Mirror 4 failed, trying mirror 5... >> logs/build.log
                  curl -L -o imgui.zip https://sourceforge.net/projects/imgui/files/master/imgui-master.zip && echo ImGui downloaded from mirror 5 (SourceForge) >> logs/build.log || (
                    echo Mirror 5 failed, trying mirror 6... >> logs/build.log
                    curl -L -o imgui.zip https://bitbucket.org/imgui-mirror/imgui/get/master.zip && echo ImGui downloaded from mirror 6 (Bitbucket) >> logs/build.log || (
                      echo Mirror 6 failed, trying mirror 7... >> logs/build.log
                      curl -L -o imgui.zip https://gitlab.com/imgui-mirror/imgui/-/archive/master/imgui-master.zip && echo ImGui downloaded from mirror 7 (GitLab) >> logs/build.log || (
                        echo Mirror 7 failed, trying mirror 8... >> logs/build.log
                        curl -L -o imgui.zip https://gitcode.net/mirrors/ocornut/imgui/-/archive/master/imgui-master.zip && echo ImGui downloaded from mirror 8 (GitCode) >> logs/build.log || (
                          echo Mirror 8 failed, trying mirror 9... >> logs/build.log
                          curl -L -o imgui.zip https://gitee.com/mirror-imgui/imgui/repository/archive/master.zip && echo ImGui downloaded from mirror 9 (Gitee) >> logs/build.log || (
                            echo Mirror 9 failed, trying mirror 10... >> logs/build.log
                            curl -L -o imgui.zip https://codeberg.org/imgui-mirror/imgui/archive/master.zip && echo ImGui downloaded from mirror 10 (Codeberg) >> logs/build.log || (
                              echo ImGui download failed from all sources >> logs/build.log
                              exit 1
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        unzip -o imgui.zip
        echo ImGui unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download MinHook
      run: |
        echo Downloading MinHook... >> logs/build.log
        curl -L -o minhook.zip https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip && echo MinHook downloaded from primary (GitHub) >> logs/build.log || (
          echo Primary MinHook download failed, trying mirror 1... >> logs/build.log
          curl -L -o minhook.zip https://mirror.ghproxy.com/https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip && echo MinHook downloaded from mirror 1 (ghproxy) >> logs/build.log || (
            echo Mirror 1 failed, trying mirror 2... >> logs/build.log
            curl -L -o minhook.zip https://codeload.github.com/TsudaKageyu/minhook/zip/refs/heads/master && echo MinHook downloaded from mirror 2 (codeload) >> logs/build.log || (
              echo Mirror 2 failed, trying mirror 3... >> logs/build.log
              curl -L -o minhook.zip https://web.archive.org/web/20250518000000/https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip && echo MinHook downloaded from mirror 3 (archive.org) >> logs/build.log || (
                echo Mirror 3 failed, trying mirror 4... >> logs/build.log
                curl -L -o minhook.zip https://github.com/mirror-minhook/minhook/archive/refs/heads/master.zip && echo MinHook downloaded from mirror 4 (mirror-minhook) >> logs/build.log || (
                  echo Mirror 4 failed, trying mirror 5... >> logs/build.log
                  curl -L -o minhook.zip https://sourceforge.net/projects/minhook/files/master/minhook-master.zip && echo MinHook downloaded from mirror 5 (SourceForge) >> logs/build.log || (
                    echo Mirror 5 failed, trying mirror 6... >> logs/build.log
                    curl -L -o minhook.zip https://bitbucket.org/minhook-mirror/minhook/get/master.zip && echo MinHook downloaded from mirror 6 (Bitbucket) >> logs/build.log || (
                      echo Mirror 6 failed, trying mirror 7... >> logs/build.log
                      curl -L -o minhook.zip https://gitlab.com/minhook-mirror/minhook/-/archive/master/minhook-master.zip && echo MinHook downloaded from mirror 7 (GitLab) >> logs/build.log || (
                        echo Mirror 7 failed, trying mirror 8... >> logs/build.log
                        curl -L -o minhook.zip https://gitcode.net/mirrors/TsudaKageyu/minhook/-/archive/master/minhook-master.zip && echo MinHook downloaded from mirror 8 (GitCode) >> logs/build.log || (
                          echo Mirror 8 failed, trying mirror 9... >> logs/build.log
                          curl -L -o minhook.zip https://gitee.com/mirror-minhook/minhook/repository/archive/master.zip && echo MinHook downloaded from mirror 9 (Gitee) >> logs/build.log || (
                            echo Mirror 9 failed, trying mirror 10... >> logs/build.log
                            curl -L -o minhook.zip https://codeberg.org/minhook-mirror/minhook/archive/master.zip && echo MinHook downloaded from mirror 10 (Codeberg) >> logs/build.log || (
                              echo MinHook download failed from all sources >> logs/build.log
                              exit 1
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        unzip -o minhook.zip
        echo MinHook unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download libcurl
      run: |
        echo Downloading libcurl... >> logs/build.log
        curl -L -o curl.zip https://curl.se/windows/dl-8.10.1_7/libcurl-x64.zip && echo libcurl downloaded from primary (curl.se) >> logs/build.log || (
          echo Primary libcurl download failed, trying mirror 1... >> logs/build.log
          curl -L -o curl.zip https://curl.haxx.se/windows/dl-8.10.1_7/libcurl-x64.zip && echo libcurl downloaded from mirror 1 (haxx.se) >> logs/build.log || (
            echo Mirror 1 failed, trying mirror 2... >> logs/build.log
            curl -L -o curl.zip https://bintray.com/artifact/download/curl/downloads/curl-8.10.1-win64.zip && echo libcurl downloaded from mirror 2 (bintray) >> logs/build.log || (
              echo Mirror 2 failed, trying mirror 3... >> logs/build.log
              curl -L -o curl.zip https://web.archive.org/web/20250518000000/https://curl.se/windows/dl-8.10.1_7/libcurl-x64.zip && echo libcurl downloaded from mirror 3 (archive.org) >> logs/build.log || (
                echo Mirror 3 failed, trying mirror 4... >> logs/build.log
                curl -L -o curl.zip https://sourceforge.net/projects/curl/files/libcurl/8.10.1/libcurl-x64.zip && echo libcurl downloaded from mirror 4 (SourceForge) >> logs/build.log || (
                  echo Mirror 4 failed, trying mirror 5... >> logs/build.log
                  curl -L -o curl.zip https://curl.tuxfamily.org/dl/libcurl-x64-8.10.1.zip && echo libcurl downloaded from mirror 5 (tuxfamily) >> logs/build.log || (
                    echo Mirror 5 failed, trying mirror 6... >> logs/build.log
                    curl -L -o curl.zip https://github.com/curl/curl/releases/download/curl-8_10_1/libcurl-x64.zip && echo libcurl downloaded from mirror 6 (GitHub) >> logs/build.log || (
                      echo Mirror 6 failed, trying mirror 7... >> logs/build.log
                      curl -L -o curl.zip https://mirror.ghproxy.com/https://curl.se/windows/dl-8.10.1_7/libcurl-x64.zip && echo libcurl downloaded from mirror 7 (ghproxy) >> logs/build.log || (
                        echo Mirror 7 failed, trying mirror 8... >> logs/build.log
                        curl -L -o curl.zip https://gitee.com/mirror-curl/curl/repository/archive/libcurl-x64-8.10.1.zip && echo libcurl downloaded from mirror 8 (Gitee) >> logs/build.log || (
                          echo Mirror 8 failed, trying mirror 9... >> logs/build.log
                          curl -L -o curl.zip https://codeberg.org/curl-mirror/curl/archive/libcurl-x64-8.10.1.zip && echo libcurl downloaded from mirror 9 (Codeberg) >> logs/build.log || (
                            echo Mirror 9 failed, trying mirror 10... >> logs/build.log
                            curl -L -o curl.zip https://bitbucket.org/curl-mirror/curl/get/libcurl-x64-8.10.1.zip && echo libcurl downloaded from mirror 10 (Bitbucket) >> logs/build.log || (
                              echo libcurl download failed from all sources >> logs/build.log
                              exit 1
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        unzip -o curl.zip
        echo libcurl unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download zlib
      run: |
        echo Downloading zlib... >> logs/build.log
        curl -L -o zlib.tar.gz https://zlib.net/zlib-1.3.1.tar.gz && echo zlib downloaded from primary (zlib.net) >> logs/build.log || (
          echo Primary zlib download failed, trying mirror 1... >> logs/build.log
          curl -L -o zlib.tar.gz https://github.com/madler/zlib/releases/download/v1.3.1/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 1 (GitHub) >> logs/build.log || (
            echo Mirror 1 failed, trying mirror 2... >> logs/build.log
            curl -L -o zlib.tar.gz https://sourceforge.net/projects/libpng/files/zlib/1.3.1/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 2 (SourceForge) >> logs/build.log || (
              echo Mirror 2 failed, trying mirror 3... >> logs/build.log
              curl -L -o zlib.tar.gz https://web.archive.org/web/20250518000000/https://zlib.net/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 3 (archive.org) >> logs/build.log || (
                echo Mirror 3 failed, trying mirror 4... >> logs/build.log
                curl -L -o zlib.tar.gz https://zlib.net/fossils/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 4 (zlib fossils) >> logs/build.log || (
                  echo Mirror 4 failed, trying mirror 5... >> logs/build.log
                  curl -L -o zlib.tar.gz https://mirror.ghproxy.com/https://zlib.net/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 5 (ghproxy) >> logs/build.log || (
                    echo Mirror 5 failed, trying mirror 6... >> logs/build.log
                    curl -L -o zlib.tar.gz https://bitbucket.org/zlib-mirror/zlib/get/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 6 (Bitbucket) >> logs/build.log || (
                      echo Mirror 6 failed, trying mirror 7... >> logs/build.log
                      curl -L -o zlib.tar.gz https://gitlab.com/zlib-mirror/zlib/-/archive/1.3.1/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 7 (GitLab) >> logs/build.log || (
                        echo Mirror 7 failed, trying mirror 8... >> logs/build.log
                        curl -L -o zlib.tar.gz https://gitcode.net/mirrors/madler/zlib/-/archive/v1.3.1/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 8 (GitCode) >> logs/build.log || (
                          echo Mirror 8 failed, trying mirror 9... >> logs/build.log
                          curl -L -o zlib.tar.gz https://gitee.com/mirror-zlib/zlib/repository/archive/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 9 (Gitee) >> logs/build.log || (
                            echo Mirror 9 failed, trying mirror 10... >> logs/build.log
                            curl -L -o zlib.tar.gz https://codeberg.org/zlib-mirror/zlib/archive/zlib-1.3.1.tar.gz && echo zlib downloaded from mirror 10 (Codeberg) >> logs/build.log || (
                              echo zlib download failed from all sources >> logs/build.log
                              exit 1
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        tar -xzf zlib.tar.gz
        ren zlib-1.3.1 zlib
        echo zlib unzipped and renamed >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download nlohmann/json
      run: |
        echo Downloading nlohmann/json... >> logs/build.log
        curl -L -o json.zip https://github.com/nlohmann/json/archive/refs/heads/develop.zip && echo nlohmann/json downloaded from primary (GitHub) >> logs/build.log || (
          echo Primary nlohmann/json download failed, trying mirror 1... >> logs/build.log
          curl -L -o json.zip https://mirror.ghproxy.com/https://github.com/nlohmann/json/archive/refs/heads/develop.zip && echo nlohmann/json downloaded from mirror 1 (ghproxy) >> logs/build.log || (
            echo Mirror 1 failed, trying mirror 2... >> logs/build.log
            curl -L -o json.zip https://codeload.github.com/nlohmann/json/zip/refs/heads/develop && echo nlohmann/json downloaded from mirror 2 (codeload) >> logs/build.log || (
              echo Mirror 2 failed, trying mirror 3... >> logs/build.log
              curl -L -o json.zip https://web.archive.org/web/20250518000000/https://github.com/nlohmann/json/archive/refs/heads/develop.zip && echo nlohmann/json downloaded from mirror 3 (archive.org) >> logs/build.log || (
                echo Mirror 3 failed, trying mirror 4... >> logs/build.log
                curl -L -o json.zip https://github.com/mirror-nlohmann-json/json/archive/refs/heads/develop.zip && echo nlohmann/json downloaded from mirror 4 (mirror-nlohmann-json) >> logs/build.log || (
                  echo Mirror 4 failed, trying mirror 5... >> logs/build.log
                  curl -L -o json.zip https://sourceforge.net/projects/nlohmann-json/files/develop/json-develop.zip && echo nlohmann/json downloaded from mirror 5 (SourceForge) >> logs/build.log || (
                    echo Mirror 5 failed, trying mirror 6... >> logs/build.log
                    curl -L -o json.zip https://bitbucket.org/nlohmann-json-mirror/json/get/develop.zip && echo nlohmann/json downloaded from mirror 6 (Bitbucket) >> logs/build.log || (
                      echo Mirror 6 failed, trying mirror 7... >> logs/build.log
                      curl -L -o json.zip https://gitlab.com/nlohmann-json-mirror/json/-/archive/develop/json-develop.zip && echo nlohmann/json downloaded from mirror 7 (GitLab) >> logs/build.log || (
                        echo Mirror 7 failed, trying mirror 8... >> logs/build.log
                        curl -L -o json.zip https://gitcode.net/mirrors/nlohmann/json/-/archive/develop/json-develop.zip && echo nlohmann/json downloaded from mirror 8 (GitCode) >> logs/build.log || (
                          echo Mirror 8 failed, trying mirror 9... >> logs/build.log
                          curl -L -o json.zip https://gitee.com/mirror-nlohmann-json/json/repository/archive/develop.zip && echo nlohmann/json downloaded from mirror 9 (Gitee) >> logs/build.log || (
                            echo Mirror 9 failed, trying mirror 10... >> logs/build.log
                            curl -L -o json.zip https://codeberg.org/nlohmann-json-mirror/json/archive/develop.zip && echo nlohmann/json downloaded from mirror 10 (Codeberg) >> logs/build.log || (
                              echo nlohmann/json download failed from all sources >> logs/build.log
                              exit 1
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        unzip -o json.zip
        echo nlohmann/json unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Build DLL
      run: |
        echo Building DLL... >> logs/build.log
        cl /D UNICODE /D _UNICODE /EHsc /Zi /Fe:RustAlkadCheat.dll /LD src/RustAlkadCheat2588.cpp /I imgui-master /I minhook-master/include /I curl/include /I zlib /I json-develop/single_include /link /LIBPATH:curl/lib libcurl.lib /LIBPATH:zlib zlib.lib user32.lib d3d11.lib dxgi.lib shell32.lib ws2_32.lib
        if %ERRORLEVEL% NEQ 0 (
          echo Build failed >> logs/build.log
          exit 1
        )
        echo Build successful >> logs/build.log
      shell: cmd

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: BuildLogs
        path: logs/build.log

    - name: Upload DLL
      uses: actions/upload-artifact@v4
      with:
        name: RustAlkadCheatDLL
        path: RustAlkadCheat.dll
