name: Build Rust Alkad 2588 Cheat DLL

on:
  push: # Запускаем при изменении любых файлов
  workflow_dispatch: # Добавляем ручной запуск

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          imgui
          minhook
          zlib
          json
        key: ${{ runner.os }}-deps-${{ hashFiles('RustAlkadCheat2588.cpp') }}-v1

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Create log directory
      run: New-Item -ItemType Directory -Path logs -Force
      shell: powershell

    - name: Download ImGui
      run: |
        Invoke-WebRequest -Uri https://github.com/ocornut/imgui/archive/refs/heads/master.zip -OutFile imgui.zip
        if (-not (Test-Path imgui.zip)) { Write-Output "Failed to download ImGui" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Extract ImGui
      run: |
        Expand-Archive -Path imgui.zip -DestinationPath imgui -Force
        if (-not (Test-Path imgui/imgui-master/imgui.h)) { Write-Output "Failed to extract ImGui" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Download MinHook
      run: |
        Invoke-WebRequest -Uri https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip -OutFile minhook.zip
        if (-not (Test-Path minhook.zip)) { Write-Output "Failed to download MinHook" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Extract MinHook
      run: |
        Expand-Archive -Path minhook.zip -DestinationPath minhook -Force
        if (-not (Test-Path minhook/minhook-master/include/MinHook.h)) { Write-Output "Failed to extract MinHook" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Download zlib
      run: |
        Invoke-WebRequest -Uri https://zlib.net/zlib1218.zip -OutFile zlib.zip
        if (-not (Test-Path zlib.zip)) { Write-Output "Failed to download zlib" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Extract zlib
      run: |
        Expand-Archive -Path zlib.zip -DestinationPath zlib -Force
        if (-not (Test-Path zlib/zlib-1.2.18/zlib.h)) { Write-Output "Failed to extract zlib" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Download nlohmann/json
      run: |
        Invoke-WebRequest -Uri https://github.com/nlohmann/json/archive/refs/heads/develop.zip -OutFile json.zip
        if (-not (Test-Path json.zip)) { Write-Output "Failed to download nlohmann/json" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Extract nlohmann/json
      run: |
        Expand-Archive -Path json.zip -DestinationPath json -Force
        if (-not (Test-Path json/json-develop/single_include/nlohmann/json.hpp)) { Write-Output "Failed to extract nlohmann/json" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: powershell

    - name: Build DLL
      run: |
        Write-Output "Building DLL..." | Out-File -FilePath logs/build.log -Append
        cl /DUNICODE /D_UNICODE /MD /O2 /W4 /FeRustAlkadCheat.dll /Iimgui/imgui-master /Iminhook/minhook-master/include /Izlib/zlib-1.2.18 /Ijson/json-develop/single_include RustAlkadCheat2588.cpp /link /DLL /OUT:RustAlkadCheat.dll 2>> logs/build.log
        if (-not (Test-Path RustAlkadCheat.dll)) { Write-Output "Build failed: DLL not created" | Out-File -FilePath logs/build.log -Append; exit 1 }
      shell: cmd

    - name: Upload logs
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: logs/

    - name: Upload DLL
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: RustAlkadCheat
        path: RustAlkadCheat.dll
