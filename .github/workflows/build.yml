name: Build Rust Alkad Cheat 2588

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Chocolatey
      shell: cmd
      run: |
        powershell -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))"

    - name: Install MinGW
      shell: cmd
      run: |
        choco install mingw --force -y
        echo "C:\ProgramData\mingw64\mingw64\bin" >> %GITHUB_PATH%

    - name: Install Archivers
      shell: cmd
      run: |
        echo "Installing archivers..."
        choco install 7zip --force -y || echo "Failed to install 7zip, continuing..."
        choco install winrar --force -y || echo "Failed to install winrar, continuing..."
        choco install unzip --force -y || echo "Failed to install unzip, continuing..."
        choco install peazip --force -y || echo "Failed to install peazip, continuing..."
        choco install bandizip --force -y || echo "Failed to install bandizip, continuing..."
        choco install winzip --force -y || echo "Failed to install winzip, continuing..."
        choco install rar --force -y || echo "Failed to install rar, continuing..."
        choco install keka --force -y || echo "Failed to install keka, continuing..."
        choco install b1freearchiver --force -y || echo "Failed to install b1freearchiver, continuing..."
        choco install extractnow --force -y || echo "Failed to install extractnow, continuing..."
        choco install izarc --force -y || echo "Failed to install izarc, continuing..."
        choco install freecommander --force -y || echo "Failed to install freecommander, continuing..."
        choco install archivarius --force -y || echo "Failed to install archivarius, continuing..."
        choco install hamsterzip --force -y || echo "Failed to install hamsterzip, continuing..."
        choco install powerarchiver --force -y || echo "Failed to install powerarchiver, continuing..."
        choco install tugzip --force -y || echo "Failed to install tugzip, continuing..."
        choco install zipgenius --force -y || echo "Failed to install zipgenius, continuing..."
        choco install alzip --force -y || echo "Failed to install alzip, continuing..."
        choco install ashampoozip --force -y || echo "Failed to install ashampoozip, continuing..."
        choco install bitser --force -y || echo "Failed to install bitser, continuing..."
        choco install universalextractor --force -y || echo "Failed to install universalextractor, continuing..."
        choco install freearc --force -y || echo "Failed to install freearc, continuing..."
        choco install quickzip --force -y || echo "Failed to install quickzip, continuing..."
        echo "Archiver installation complete."

    - name: Download and extract nlohmann-json
      shell: cmd
      run: |
        if exist json\single_include\nlohmann\json.hpp (
          echo "Local nlohmann-json found, skipping download."
        ) else (
          echo "Local nlohmann-json not found, downloading..."
          curl -L -o json.zip https://github.com/nlohmann/json/archive/refs/tags/v3.11.3.zip || (
            echo "Failed to download nlohmann-json v3.11.3, trying mirrors..."
            curl -L -o json.zip https://github.com/nlohmann/json/archive/refs/heads/develop.zip || (
              curl -L -o json.zip https://github.com/ArthurSonzogni/nlohmann_json_cmake_fetchcontent/archive/refs/heads/master.zip || (
                curl -L -o json.zip https://github.com/jarro2783/json/archive/refs/heads/master.zip || (
                  curl -L -o json.zip https://github.com/axoloti/nlohmann_json/archive/refs/heads/master.zip || (
                    curl -L -o json.zip https://github.com/pboettch/json-schema-validator/archive/refs/heads/master.zip || (
                      curl -L -o json.zip https://github.com/nlohmann/json/releases/download/v3.11.3/json-3.11.3.zip || (
                        curl -L -o json.zip https://github.com/martinmoene/nlohmann_json_single/archive/refs/heads/master.zip || (
                          curl -L -o json.zip https://github.com/Hydrazer/nlohmann-json/archive/refs/heads/master.zip || (
                            curl -L -o json.zip https://github.com/tburette/nlohmann_json/archive/refs/heads/master.zip || (
                              curl -L -o json.zip https://gitlab.com/nlohmann/json/-/archive/v3.11.3/json-v3.11.3.zip || (
                                curl -L -o json.zip https://gitlab.com/nlohmann/json/-/archive/master/json-master.zip || (
                                  curl -L -o json.zip https://bitbucket.org/nlohmann/json/downloads/json-3.11.3.zip || (
                                    curl -L -o json.zip https://bitbucket.org/nlohmann/json/downloads/master.zip || (
                                      curl -L -o json.zip https://codeberg.org/nlohmann/json/archive/v3.11.3.zip || (
                                        curl -L -o json.zip https://codeberg.org/nlohmann/json/archive/master.zip || (
                                          curl -L -o json.zip https://gitlab.com/martinmoene/nlohmann_json_single/-/archive/master/nlohmann_json_single-master.zip || (
                                            curl -L -o json.zip https://github.com/nlohmann/json-mirror/archive/refs/tags/v3.11.3.zip || (
                                              echo "All nlohmann-json download attempts failed, exiting..."
                                              exit /b 1
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          echo "Extracting json.zip..."
          7z x json.zip -ojson_temp -y && (
            echo "Extracted with 7zip"
            goto :json_extracted
          ) || (
            echo "Failed with 7zip, trying winrar..."
            rar x json.zip -ojson_temp -y && (
              echo "Extracted with winrar"
              goto :json_extracted
            ) || (
              echo "Failed with winrar, trying unzip..."
              unzip json.zip -d json_temp -o && (
                echo "Extracted with unzip"
                goto :json_extracted
              ) || (
                echo "Failed with unzip, trying peazip..."
                peazip -ext2here json.zip -ojson_temp && (
                  echo "Extracted with peazip"
                  goto :json_extracted
                ) || (
                  echo "Failed with peazip, trying bandizip..."
                  bandizip x -o:json_temp -y json.zip && (
                    echo "Extracted with bandizip"
                    goto :json_extracted
                  ) || (
                    echo "Failed with bandizip, trying winzip..."
                    winzip -e -o json_temp json.zip && (
                      echo "Extracted with winzip"
                      goto :json_extracted
                    ) || (
                      echo "Failed with winzip, trying keka..."
                      keka --extract json.zip --output json_temp && (
                        echo "Extracted with keka"
                        goto :json_extracted
                      ) || (
                        echo "Failed with keka, trying b1freearchiver..."
                        b1freearchiver --extract json.zip --output json_temp && (
                          echo "Extracted with b1freearchiver"
                          goto :json_extracted
                        ) || (
                          echo "Failed with b1freearchiver, trying extractnow..."
                          extractnow -x json.zip -o json_temp && (
                            echo "Extracted with extractnow"
                            goto :json_extracted
                          ) || (
                            echo "Failed with extractnow, trying izarc..."
                            izarc -x json.zip -d json_temp && (
                              echo "Extracted with izarc"
                              goto :json_extracted
                            ) || (
                              echo "Failed with izarc, trying freecommander..."
                              freecommander /extract json.zip json_temp && (
                                echo "Extracted with freecommander"
                                goto :json_extracted
                              ) || (
                                echo "Failed with freecommander, trying archivarius..."
                                archivarius -extract json.zip -o json_temp && (
                                  echo "Extracted with archivarius"
                                  goto :json_extracted
                                ) || (
                                  echo "Failed with archivarius, trying hamsterzip..."
                                  hamsterzip extract json.zip -o json_temp && (
                                    echo "Extracted with hamsterzip"
                                    goto :json_extracted
                                  ) || (
                                    echo "Failed with hamsterzip, trying powerarchiver..."
                                    powerarchiver extract json.zip -d json_temp && (
                                      echo "Extracted with powerarchiver"
                                      goto :json_extracted
                                    ) || (
                                      echo "Failed with powerarchiver, trying tugzip..."
                                      tugzip -x json.zip -o json_temp && (
                                        echo "Extracted with tugzip"
                                        goto :json_extracted
                                      ) || (
                                        echo "Failed with tugzip, trying zipgenius..."
                                        zipgenius x json.zip -d json_temp && (
                                          echo "Extracted with zipgenius"
                                          goto :json_extracted
                                        ) || (
                                          echo "Failed with zipgenius, trying alzip..."
                                          alzip -x json.zip -o json_temp && (
