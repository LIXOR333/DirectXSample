name: Build Rust Alkad 2588 Cheat DLL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          imgui-master
          minhook-master
          zlib
          json-develop
        key: ${{ runner.os }}-deps-${{ hashFiles('.github/workflows/build.yml') }}

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Create log directory
      run: mkdir logs
      shell: cmd

    - name: Download ImGui
      run: |
        echo Downloading ImGui... >> logs/build.log
        curl -L -o imgui.zip https://github.com/ocornut/imgui/archive/refs/heads/master.zip || (
          echo Failed to download ImGui from primary source >> logs/build.log
          exit 1
        )
        unzip -o imgui.zip
        ren imgui-master imgui-master || (
          for /f "delims=" %%i in ('dir /b /ad ^| findstr imgui-') do ren "%%i" imgui-master
        )
        if not exist imgui-master\imgui.h (
          echo Error: imgui.h not found in imgui-master >> logs/build.log
          exit 1
        )
        echo ImGui downloaded and verified >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download MinHook
      run: |
        echo Downloading MinHook... >> logs/build.log
        curl -L -o minhook.zip https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip || (
          echo Failed to download MinHook from primary source >> logs/build.log
          exit 1
        )
        unzip -o minhook.zip
        ren minhook-master minhook-master || (
          for /f "delims=" %%i in ('dir /b /ad ^| findstr minhook-') do ren "%%i" minhook-master
        )
        if not exist minhook-master\include\MinHook.h (
          echo Error: MinHook.h not found in minhook-master >> logs/build.log
          exit 1
        )
        echo MinHook downloaded and verified >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download and Build zlib
      run: |
        echo Downloading zlib... >> logs/build.log
        curl -L -o zlib.tar.gz https://zlib.net/zlib-1.3.1.tar.gz || (
          echo Failed to download zlib from primary source >> logs/build.log
          exit 1
        )
        tar -xzf zlib.tar.gz
        ren zlib-1.3.1 zlib
        cd zlib
        echo Building zlib... >> logs/build.log
        nmake -f win32/Makefile.msc
        if not exist zlib.lib (
          echo Error: zlib.lib not found after build >> logs/build.log
          exit 1
        )
        echo zlib built successfully >> logs/build.log
        cd ..
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download nlohmann-json
      run: |
        echo Downloading nlohmann/json... >> logs/build.log
        curl -L -o json.zip https://github.com/nlohmann/json/archive/refs/heads/develop.zip || (
          echo Failed to download nlohmann/json from primary source >> logs/build.log
          exit 1
        )
        unzip -o json.zip
        ren json-develop json-develop || (
          for /f "delims=" %%i in ('dir /b /ad ^| findstr json-') do ren "%%i" json-develop
        )
        if not exist json-develop\single_include\nlohmann\json.hpp (
          echo Error: json.hpp not found in json-develop >> logs/build.log
          exit 1
        )
        echo nlohmann/json downloaded and verified >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Build DLL
      run: |
        echo Building DLL... >> logs/build.log
        if not exist src\RustAlkadCheat2588.cpp (
          echo Error: RustAlkadCheat2588.cpp not found in src/ directory >> logs/build.log
          dir src /s /b >> logs/build.log 2>&1
          exit 1
        )
        echo RustAlkadCheat2588.cpp found >> logs/build.log
        if not exist zlib\zlib.lib (
          echo Error: zlib.lib not found in zlib/ directory >> logs/build.log
          dir zlib /s /b >> logs/build.log 2>&1
          exit 1
        )
        echo zlib.lib found >> logs/build.log
        cl /D UNICODE /D _UNICODE /EHsc /Zi /Fe:RustAlkadCheat.dll /LD src/RustAlkadCheat2588.cpp /I imgui-master /I minhook-master/include /I zlib /I json-develop/single_include /link /LIBPATH:zlib zlib.lib user32.lib d3d11.lib dxgi.lib shell32.lib ws2_32.lib
        if %ERRORLEVEL% NEQ 0 (
          echo Build failed, check compiler output above >> logs/build.log
          exit 1
        )
        echo Build successful >> logs/build.log
      shell: cmd

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: BuildLogs
        path: logs/build.log

    - name: Upload DLL
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: RustAlkadCheatDLL
        path: RustAlkadCheat.dll
