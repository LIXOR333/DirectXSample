name: Build RustAlkadecheat2588 Cheat DLL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          imgui-master
          minhook-master
          curl
          zlib
          json-develop
        key: ${{ runner.os }}-deps-${{ hashFiles('build.yml') }}

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Create log directory
      run: mkdir logs
      shell: cmd

    - name: Download ImGui
      run: |
        echo Downloading ImGui... >> logs/build.log
        curl -L -o imgui.zip https://github.com/ocornut/imgui/archive/refs/heads/master.zip && echo ImGui downloaded from primary >> logs/build.log || (
          echo Primary ImGui download failed, trying mirror... >> logs/build.log
          curl -L -o imgui.zip https://mirror.ghproxy.com/https://github.com/ocornut/imgui/archive/refs/heads/master.zip && echo ImGui downloaded from mirror >> logs/build.log || (
            echo ImGui download failed from all sources >> logs/build.log
            exit 1
          )
        )
        unzip imgui.zip
        echo ImGui unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download MinHook
      run: |
        echo Downloading MinHook... >> logs/build.log
        curl -L -o minhook.zip https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip && echo MinHook downloaded from primary >> logs/build.log || (
          echo Primary MinHook download failed, trying mirror... >> logs/build.log
          curl -L -o minhook.zip https://mirror.ghproxy.com/https://github.com/TsudaKageyu/minhook/archive/refs/heads/master.zip && echo MinHook downloaded from mirror >> logs/build.log || (
            echo MinHook download failed from all sources >> logs/build.log
            exit 1
          )
        )
        unzip minhook.zip
        echo MinHook unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download libcurl
      run: |
        echo Downloading libcurl... >> logs/build.log
        curl -L -o curl.zip https://curl.se/windows/dl-8.10.1_7/libcurl-x64.zip && echo libcurl downloaded from primary >> logs/build.log || (
          echo Primary libcurl download failed, trying mirror... >> logs/build.log
          curl -L -o curl.zip https://curl.haxx.se/windows/dl-8.10.1_7/libcurl-x64.zip && echo libcurl downloaded from mirror >> logs/build.log || (
            echo libcurl download failed from all sources >> logs/build.log
            exit 1
          )
        )
        unzip curl.zip
        echo libcurl unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download zlib
      run: |
        echo Downloading zlib... >> logs/build.log
        curl -L -o zlib.zip https://zlib.net/zlib13.zip && echo zlib downloaded from primary >> logs/build.log || (
          echo Primary zlib download failed, trying mirror... >> logs/build.log
          curl -L -o zlib.zip https://github.com/madler/zlib/releases/download/v1.3/zlib13.zip && echo zlib downloaded from mirror >> logs/build.log || (
            echo zlib download failed from all sources >> logs/build.log
            exit 1
          )
        )
        unzip zlib.zip
        echo zlib unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Download nlohmann/json
      run: |
        echo Downloading nlohmann/json... >> logs/build.log
        curl -L -o json.zip https://github.com/nlohmann/json/archive/refs/heads/develop.zip && echo nlohmann/json downloaded from primary >> logs/build.log || (
          echo Primary nlohmann/json download failed, trying mirror... >> logs/build.log
          curl -L -o json.zip https://mirror.ghproxy.com/https://github.com/nlohmann/json/archive/refs/heads/develop.zip && echo nlohmann/json downloaded from mirror >> logs/build.log || (
            echo nlohmann/json download failed from all sources >> logs/build.log
            exit 1
          )
        )
        unzip json.zip
        echo nlohmann/json unzipped >> logs/build.log
      shell: cmd
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Build DLL
      run: |
        echo Building DLL... >> logs/build.log
        cl /D UNICODE /D _UNICODE /EHsc /Zi /Fe:RustAlkadCheat.dll /LD src/RustAlkadCheat2588.cpp /I imgui-master /I minhook-master/include /I curl/include /I zlib /I json-develop/single_include /link /LIBPATH:curl/lib libcurl.lib /LIBPATH:zlib zlib.lib user32.lib d3d11.lib dxgi.lib shell32.lib ws2_32.lib
        if %ERRORLEVEL% NEQ 0 (
          echo Build failed >> logs/build.log
          exit 1
        )
        echo Build successful >> logs/build.log
      shell: cmd

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: BuildLogs
        path: logs/build.log

    - name: Upload DLL
      uses: actions/upload-artifact@v4
      with:
        name: RustAlkadCheatDLL
        path: RustAlkadCheat.dll
